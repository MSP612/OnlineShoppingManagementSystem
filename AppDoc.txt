

*** SETTINGS ***

Scenario - change password
GIVEN I’m an app user
AND I’m logged in
AND I entered 5
AND I selected ‘Settings’ in main menu
AND I see list of options to change settings
AND I select option number 1 ‘Change Password’
AND I enter 1 in console
AND I am asked to enter new password
WHEN I entered new password
THEN I see message ‘Your password has been successfully changed’
AND I navigated to main menu

Scenario - change email
GIVEN I’m an app user
AND I’m logged in
AND I entered 5
AND I selected ‘Settings’ in main menu
AND I see list of options to change settings
AND I select option number 2 ‘Change Email’
AND I enter 2 in console
AND I am asked to enter new email
WHEN I entered new email
THEN I see message ‘Your email has been successfully changed’
AND I navigated to main menu

Scenario - setting - error handling - not valid option
GIVEN I’m an app user
AND I’m logged in
AND I entered 5
AND I selected ‘Settings’ in main menu
AND I see list of options to change settings
WHEN I enter any number beside 1 and 2
THEN I see the message ‘Only 1, 2 is allowed. Try one more time’
AND I see settings menu again

Scenario - setting - navigate back to the main menu
GIVEN I’m an app user
AND I’m logged in
AND I entered 5
AND I selected ‘Settings’ in main menu
AND I see list of options to change settings
WHEN I enter ‘menu’
THEN I navigated back to the main menu

Scenario - setting - error handling - not logged in
GIVEN I’m an app user
WHEN I entered 5
AND I selected ‘Settings’ in main menu
THEN I see message ‘Please, log in or create new account to change your account settings’

*** CUSTOMER LIST ***

Scenario - print list of customers to console

GIVEN I’m an app user
WHEN I entered 6
AND I selected ‘Customer List’ in main menu
THEN I see list of customers
AND I navigated back to the main menu

Technical note:
-	We shouldn’t print Customer password



=== Technical details ===

General technical requirements: 
1) instance of each service (UserManagementService, OrderManagementService, ProductManagementService, ApplicationContext) exist in a single copy during the program execution. Access to the single copy is possible via static getInstance() method of each specific type. And I can’t create objects of these types via constructor.

2) Each implementation of service should have this method 

	void clearServiceState()

for the sake of testing. This method should reset state of service to default. Taking into account the instance of each service will be in single copy, our tests have to have method that will clear the state of the service to reproduce different test cases.
To reset user counter - implement clearState() method in the DefaultUser class.

3) During implementation of this task you have to implement next interfaces:
public interface Cart {

	boolean isEmpty();

	void addProduct(Product productById);

	Product[] getProducts();

	void clear();

}


public interface Order {

	boolean isCreditCardNumberValid(String userInput);

	void setCreditCardNumber(String userInput);

	void setProducts(Product[] products);

	void setCustomerId(int customerId);
	
	int getCustomerId();

}


public interface Product {

	int getId();

	String getProductName();

}


public interface User {
	
	String getFirstName();
	String getLastName();
	String getPassword();
	String getEmail();
	int getId();
	
	void setPassword(String newPassword);
	void setEmail(String newEmail);
	
	
}


public interface Menu {

	void start();
	
	void printMenuHeader();
}


public interface OrderManagementService {

	void addOrder(Order order);

	Order[] getOrdersByUserId(int userId);

Order[] getOrders();
}


public interface ProductManagementService {

	Product[] getProducts();

	Product getProductById(int productIdToAddToCart);

}


public interface UserManagementService {

	String registerUser(User user);
	
	User[] getUsers();

	User getUserByEmail(String userEmail);

}



And here is the class of ApplicationContext which will help you during implementation of this program:
public class ApplicationContext {
	
	private static ApplicationContext instance;
	
	private User loggedInUser;
	private Menu mainMenu;
	private Cart sessionCart;
	
	private ApplicationContext() {
	}
	
	public void setLoggedInUser(User user) {
		if (this.sessionCart != null) {
			this.sessionCart.clear(); // we have to clear session cart when new user is logged in
		}
		this.loggedInUser = user;
	}
	
	public User getLoggedInUser() {
		return this.loggedInUser;
	}
	
	public void setMainMenu(Menu menu) {
		this.mainMenu = menu;
	}
	
	public Menu getMainMenu() {
		return this.mainMenu;
	}

	public static ApplicationContext getInstance() {
		if (instance == null) {
			instance = new ApplicationContext();
		}
		return instance;
	}

	public Cart getSessionCart() {
		if (this.sessionCart == null) {
			this.sessionCart = new DefaultCart();
		}
		return this.sessionCart;
	}

}


To create this program - feel free to use special template of the program which you can find here https://github.com/AndriiPiatakha/learnit_java_core/tree/master/src/com/itbulls/learnit/javacore/oop/exam/templates/onlineshop 

Solution of the exam task can be found here https://github.com/AndriiPiatakha/learnit_java_core/tree/master/src/com/itbulls/learnit/javacore/oop/exam/onlineshop 
